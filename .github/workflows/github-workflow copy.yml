name: module5_task4
on:
  push:
    tags: [ "1.0.*" ]
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: write

jobs:
  Build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Setup GitHub Actions Image
        run: sudo apt install -y make zip
      - name: Build Docker Image
        run: |
          cd module5_task4
          make build-docker
      - name: Lint
        run: |
          cd module5_task4
          make lint
      - name: Build
        run: |
          cd module5_task4
          make build
      - name: Unit Tests
        run: |
          cd module5_task4
          make unit-tests
      - name: Integration Tests
        run: |
          cd module5_task4
          make integration-tests
      - name: Validate
        run: |
          cd module5_task4
          make validate
      - name: Package
        run: |
          cd module5_task4
          make package
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish Image to Docker Hub
        run: |
          cd module5_task4
          make publish-docker-hub
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.AWESOME_KEY }}
      - name: Create & Configure EC2 Instance
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2
        run: |
          cd module5_task4
          ./ensure-server-setup.sh "$(./ensure-server-created.sh)"
      - name: Deploy Docker Image
        run: |
          cd module5_task4
          ./deploy.sh
  Release:
    needs: Build
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/1.0.')
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Download artifacts from Build
        uses: actions/download-artifact@v3
        with:
          name: awesomeWebsiteZip
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: awesome-website.zip Deploy.md
